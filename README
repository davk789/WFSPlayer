

WFSMixer -- an audio mixer that implements Wavefront Synthesis to spatialize sound along
a 2 dimensional plane. This will be able to mix external signals, along with custom 
SynthDefs that can be loaded with this set of SuperCollider classes.

Installation:

With git, run this command from the command line:

git clone git://github.com/davk789/WFSPlayer.git WFSPlayer

Running:

Use something like this. The SynthDefs can be any mono signal. Their out buses must then
be set to the inBuses of their respective channels as follows:

~main = WFSMixer();

// the server will boot automatically. add two channels in the WFSMixer interface
// and then run the following code.

~ggOutBus = ~main.addChannel;
~pOutBus = ~main.addChannel;

// obv. use your own SynthDefs here (or I can call default synthDefs
// *** NOTE that the synths must be added to the head of group 1 ***

~ggNode = s.nextNodeID;
s.sendMsg('s_new', 'testWFS', ~ggNode, 0, 1, 'outBus', ~ggOutBus);
s.sendMsg('n_free', ~ggNode);
~pNode = s.nextNodeID;
s.sendMsg('s_new', 'wfsTestPulses', ~pNode, 0, 1, 'outBus', ~pOutBus);
s.sendMsg('n_free', ~pNode);


Notes:

WFSMixer depends on the XML Quarks package, and SwingOSC.

It is possible to use WFSMixer with the Cocoa GUI. Simply alter the classes in the 
following project files, to inherit from the Cocoa counterparts to the SwingOSC classes
WFSMarkerArea, and WFSScrollingNumberBox.

util/WFSMarkerArea.sc
util/WFSScrollingNumberBox.sc




*********** notes ***********

TODO:
handle multiple instances by using static variables
programmatically load presets
... wish list
add a global "loop" option to the sequencer
add drawing/algorithmic sequencing features
add vertical placement of audio signals

BUGS:
Cocoa GUI not supported
mousedown on recording - the pause results in the marker waiting at the next
    value
noticeable delay artfacts when moving sound sources
volume attenuation for the panning feature needs to be fine tuned